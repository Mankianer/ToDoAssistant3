name: Docker Image CI

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      registry: ghcr.io

    steps:
      - uses: actions/checkout@v3

      - name: Git Login
        uses: oleksiyrudenko/gha-git-credentials@v2-latest
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up env-variables
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            if [ "${{ github.ref_name }}" == "main" ]; then
              echo "releaseTask=final" >> $GITHUB_ENV
            elif [ "${{ github.ref_name }}" == "develop" ]; then
              echo "releaseTask=devSnapshot" >> $GITHUB_ENV
            else
              echo "releaseTask=" >> $GITHUB_ENV
            fi
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            if [ "${{ github.base_ref }}" == "main" ]; then
              echo "releaseTask=candidate" >> $GITHUB_ENV
            else
              echo "releaseTask=" >> $GITHUB_ENV
            fi
          else
            echo "releaseTask=" >> $GITHUB_ENV
          fi
          #build number as tag
          git tag build-${{ github.run_number }}
          git push --tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: run?
        run: docker buildx ls

      - name: export version
        run: |
          ./gradlew -Dorg.ajoberstar.grgit.auth.username='${{github.actor}}' -Dorg.ajoberstar.grgit.auth.password='${{ secrets.GHCR_PAT }}' ${{ env.releaseTask }} 
          export version=$(./gradlew -Prelease.useLastTag=true properties ${{ env.releaseTask }} | grep ^version: | cut -d":" -f2- | xargs)
          echo "version=${version}" >> $GITHUB_ENV
          echo "versionImage=$(echo ${version} | sed -e 's/[^a-z|0-9|.|-]/-/g')" >> $GITHUB_ENV

      - name: run build-container
        run: |
            docker run -d --name build -v ${PWD}:/home/gradle gradle:jdk18 gradle --foreground

      - name: build jar
        run: docker exec build gradle -Prelease.useLastTag=true ${{env.releaseTask}} bootJar

      - name: build images
        run: |
          docker buildx  build . -t ${{env.registry}}/mankianer/todoassistant3:arm64-${{env.versionImage}} --platform linux/arm64
          docker buildx  build . -t ${{env.registry}}/mankianer/todoassistant3:amd64-${{env.versionImage}} --platform linux/amd64

      - name: push images
        run: |
          docker push ${{env.registry}}/mankianer/todoassistant3:arm64-${{env.versionImage}}
          docker push ${{env.registry}}/mankianer/todoassistant3:amd64-${{env.versionImage}}

      - name: push image-manifest
        run: |
          docker manifest create ${{env.registry}}/mankianer/todoassistant3:${{env.versionImage}} ${{env.registry}}/mankianer/todoassistant3:amd64-${{env.versionImage}} ${{env.registry}}/mankianer/todoassistant3:arm64-${{env.versionImage}}
          docker manifest push ${{env.registry}}/mankianer/todoassistant3:${{env.versionImage}}
